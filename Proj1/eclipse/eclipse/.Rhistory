load(url("http://www.math.usu.edu/adele/IntroR/BRFSS_CDC.rda"))
??RandomForest
??randomForest
installpackage(randomForest)
install.packages("randomForest")
2+3
rnorm(2)
?rnorm
rnorm(2,0,0)
rnorm(2,0,1)
power
divide
div
sub
divide
install.packages(microbenchmark)
install.packages(microbenchmark)
install.packages("microbenchmark")
?microbenchmark
library(microbenchmark)
?microbenchmark
x <- 2^3 *2
x<-2^3 *2
x<-2^3*2
x=2^3*2
x
x <- 2^3*2
x <- 2^3*3
x
q()
load(url("http://www.math.usu.edu/adele/IntroR/BRFSS_CDC.rda"))
names(cdc)
names(cdc)
load("C:/Users/VeNuSs/AppData/Local/Temp/BRFSS_CDC(1).rda")
load("C:/Users/VeNuSs/AppData/Local/Temp/BRFSS_CDC(2).rda")
dim(cdc)
is.matrix(cdc)
is.data.frame(cdc)
head(cdc)
summary(cdc)
?data.frame
head(cdc)
tail(cdc)
dim(cdc)
head(cdc$weight)
head(cdc$exerany)
head(cdc$exeray)
attach(cdc)
weight
?cdc
cdc
nrow(cdc)
ncol(cdc)
c(1,2)
r(1,2)
c(1,2)
?c
weight[weight >= 400]
head(weight >= 400)
head(cdc)
head(weight >= 175)
sum(weight >= 400)
cdc(weight >= 400)
tail(weight >= 400)
weight[weight >= 400]
?attach
summary(bmi)
summary(weight)
# Or just obtain the mean
mean(weight)
# Here's a new variable called deltaWt. It's the difference
# between desired weight and weight
deltaWt = wtdesire - weight
# Here's the summary of deltaWt
summary(deltaWt)
# What is the mean of deltaWt?
mean(deltaWt)
# Do a few more things with desired weight
summary(wtdesire)
hist(wtdesire)
hist(wtdesire, breaks = 30)
hist(delta, breaks = 30)
hist(deltaWt, breaks = 30)
hist(deltaWt, breaks = 30, right = F)
timesWt = weight / deltaWt
summary(timesWt)
summary(gender)
# The head function is very helpful for looking at just a few values
head(gender)
# The class function returns the data type of the vector
class(gender)
class(weight)
class(bmi)
# Manipulate the data and assume the first value for
# weight is missing (represented as NA = "Not Available")
weight[1] = NA
# Note the side effect! This creates a new vector called weight.
# cdc$weight remains unchanged!
head(weight)
head(cdc$weight)
# Redo some of the previous calculations
summary(weight)
summary(wtdesire)
hist(wtdesire)
?hist
hist(deltaWt, breaks = 30)
hist(deltaWt, breaks = 30)
hist(deltaWt, breaks = 30)
hist(deltaWt, breaks = 30, right = F)
timesWt = weight / deltaWt
summary(timesWt)
summary(gender)
head(gender)
?dataframe
is.data.frame(cdc)
detach(cdc)
is.data.frame(cdc)
?mean
CAquakes = read.table(file = "http://www.consrv.ca.gov/cgs/rghm/quakes/Documents/ms49epicenters.txt",
CAquakes = read.table(file = "http://www.consrv.ca.gov/cgs/rghm/quakes/Documents/ms49epicenters.txt",
header = TRUE)
a
CAquakes = read.table(file = "http://www.consrv.ca.gov/cgs/rghm/quakes/Documents/ms49epicenters.txt",
header = TRUE)
dim(CAquakes)
head(CAquakes)
CAquakes[1:3, ]
CAquakes
class(CAquakes)
class(CAquakes$Date)
class(CAquakes$Latitude)
CAquakes[CAquakes$M > 7.0, ]
CAquakes[CAquakes$M > 7.0 ]
CAquakes[CAquakes$M > 7.0, ]
CAquakes$M[CAquakes$M > 7.0]
sum(CAquakes$M > 7.0)
CAquakes[CAquakes$M > 7.0, c("Latitude", "Longitude")]
CAquakes[CAquakes$M > 7.0,][,c("Latitude", "Longitude")]
CAquakes[CAquakes$M > 7.0,][,1:2]
CAquakes[CAquakes$M > 7.0,][,2:3]
CAquakes[CAquakes$M > 7.0,2:3]
CAquakes[CAquakes$M > 7.0,][2:3]
all(CAquakes$M > 1.0)
objects()
rm(y)
rm(x)
objects()
a1b2=5
a1b2
a1b2==9
h9<2
x100_y99 = 9
x100_y99
weight <- c(175, 125)
height <- c(70, 64)
bmi <- (weight / 2.2) / (2.54 / 100 * height)^2
bmi
load(url("http://www.math.usu.edu/adele/IntroR/SFTemps.rda"))
objects()
rm(a1b2)
rm(bmi)
rm(CAquakes)
rm(cdc)
[temp - 32]5/9
(temp - 32)5/9
5/9(temp - 32)
5/9*(temp - 32)
x=1:20
x
x[c(1,0)]
x=1:20
x[c(TRUE,FALSE)]
?which.max
load(url("http://www.math.usu.edu/adele/IntroR/SFTemps.rda"))
SFTemps
load(url("http://www.math.usu.edu/adele/IntroR/SFTemps.rda"))
objects()
head()
head
?head
length
load(url("http://www.math.usu.edu/adele/IntroR/SFTemps.rda"))
objects()
length
names(cdc)
l=load(url("http://www.math.usu.edu/adele/IntroR/SFTemps.rda"))
()
objects()
head(l)
length(l)
dim(l)
l[dates]
l[year]
dim(l[year])
l$year
CAquakes
CAquakes = read.table(file = "http://www.consrv.ca.gov/cgs/rghm/quakes/Documents/ms49epicenters.txt",
sxssdsd
dfqrqwe313987123012
# class(), min(), max(), sort(), quantile(), and some plottingCA
load(url("http://www.math.usu.edu/adele/IntroR/SFTemps.rda"))
objects()
dates'.length()'
?length
length(dates)
length(month)
mean(temp)
?mean
mean(temp,na.rm=FALSE)
mean(temp,na.rm=TRUE)
?sd
sd(temp,na.rm=TRUE)
head(temp)
?median
data =  read.csv("turtles.csc")
data =  read.csv("turtles.csv")
data
mydata =  read.csv("turtles.csv")
?read
<read.csv
?read.csv
mydata = read.csv2("turtles.csv")
mydata = read.table("turtles.csv")
x=c(2,3,4)
x
?norm
?scan
mydata = scan(file="turtles.csv")
mydata = read.table("q")
mydata = read.table("q.csv")
?read.table
mydata = read.table(file="q.csv")
mydata = read.csv("q.csv", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", ...)
dec = ".", fill = TRUE, comment.char = "")
mydata = read.csv("q.csv", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
mydata <- read.csv("q.csv")
mydata <- read.csv("q.csv")
mydata <- read.csv("q.csv")
?file.choose
mydata <- read.csv("q.csv")
mydata <- read.csv(file.choose())
mydata
summary(mydata)
summary(mydata $length)
summary(mydata$length)
summary(mydata$width)
?$
summary(width)
summary(Width)
summary(mydata$Width)
?boxplot
boxplot(summary(mydata$Width))
histogram(summary(mydata$Width))
?hist
hist(summary(mydata$Width))
conv.all
?conv
?eigen
setwd("C:/Users/VeNuSs/Desktop/CS 6890/eclipse/eclipse")
?read.csv
jdt.code.metrics <- read.csv(file= "change-metrics.csv",header =TRUE,row.names = 1,sep = ";")
summary(jdt.code.metrics)
jdt.cor=cor(jdt.change.metrics,method = "spearman")
jdt.change.metrics <- read.csv(file= "change-metrics.csv",header =TRUE,row.names = 1,sep = ";")
summary(jdt.change.metrics)
head(jdt.change.metrics)
tail(jdt.change.metrics)
?cor
jdt.cor=cor(jdt.change.metrics,method = "spearman")
jdt.change.cor=cor(jdt.change.metrics,method = "spearman")
nrow(jdt.change.cor)
jdt.change.cor.bugs= jdt.change.cor ["bugs",]
head(jdt.change.cor.bugs)
summary(jdt.change.cor.bugs)
?sort
sort (jdt.change.cor.bugs,decreasing = T)[2:6]
sort (jdt.change.cor.bugs,decreasing = T)[1:6]
head(jdt.change.cor.bugs)
sort (jdt.change.cor.bugs,decreasing = T)[2:6]
jdt.change.cor.bugs.matrix = sort (jdt.change.cor.bugs,decreasing = T)[2:6]
jdt.change.cor.bugs.matrix.cor = cor (jdt.change.cor.bugs.matrix,method = "spearman")
jdt.change.cor.bugs.matrix
jdt.change.metrics <- read.csv(file= "change-metrics.csv",header =TRUE,row.names = 1,sep = ";")
head(jdt.change.metrics)
jdt.change.cor.bugs.matrix.cor = cor (jdt.change.cor.bugs.matrix,method = "spearman")
jdt.change.cor.bugs.matrix
jdt.change.metrices.five = jdt.change.metrices ["linesAddedUntil.","numberOfVersionsUntil.",]
jdt.change.metrics.five = jdt.change.metrics ["linesAddedUntil.","numberOfVersionsUntil.",]
jdt.change.cor.bugs.matrix.cor = cor (jdt.change.metrics.five,method = "spearman")
jdt.change.metrics.five = jdt.change.metrics ["linesAddedUntil.","numberOfVersionsUntil.",]
head(jdt.change.metrics.five)
jdt.change.metrics.five = jdt.change.metrics ["linesAddedUntil.",]
head(jdt.change.metrics.five)
jdt.change.metrics.five = jdt.change.metrics[]["linesAddedUntil.",]
head(jdt.change.metrics.five)
jdt.change.metrics.five = jdt.change.metrics$linesAddedUntil.
head(jdt.change.metrics.five)
jdt.change.cor.bugs.matrix.cor = cor (jdt.change.metrics.five,method = "spearman")
?read.csv
jdt.change.cor.bugs.matrix
jdt.change.metrics.five = jdt.change.metrics[ , c("linesAddedUntil.", "numberOfVersionsUntil.","linesRemovedUntil.","majorBugs","maxLinesAddedUntil.") ]
head(jdt.change.metrics.five)
jdt.change.cor.bugs.matrix.cor = cor (jdt.change.metrics.five,method = "spearman")
jdt.change.cor.bugs.matrix.cor
summary(jdt.change.cor.bugs.matrix.cor)
jdt.change.cor.bugs.matrix = sort (jdt.change.cor.bugs,decreasing = T)[2:6]
jdt.change.cor.bugs.matrix
head(jdt.change.metrics.five)
jdt.change.cor.bugs.matrix.cor = cor (jdt.change.metrics.five,method = "spearman")
jdt.change.cor.bugs.matrix.cor
jdt.change.cor.bugs.matrix.cor
